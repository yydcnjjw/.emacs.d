(require-package 'yasnippet)
(require-package 'yasnippet-snippets)
(defun my/yasnippet-mode-enable ()
  (yas-minor-mode)
  (local-set-key (kbd "C-c y") 'company-yasnippet)
  )
(my/add-hook-prog-and-text-mode 'my/yasnippet-mode-enable)

(require 'yasnippet)
(defun yas--snippet-create (content expand-env begin end)
  (save-restriction
    (let ((snippet (yas--make-snippet expand-env)))
      (yas--letenv expand-env
        (let ((buffer-undo-list t))
          (goto-char begin)
          (run-hook-with-args 'before-change-functions begin end)
          (insert content)
          (setq end (+ end (length content)))
          (narrow-to-region begin end)
          (goto-char (point-min))
          (yas--snippet-parse-create snippet)
          (setq change-text-length (- (point-max) (point-min)))
          (run-hook-with-args 'after-change-functions (point-min) (point-max) change-text-length))
        (when (listp buffer-undo-list)
          (push (cons (point-min) (point-max))
                buffer-undo-list))
        (yas--indent snippet)
        (when (listp buffer-undo-list)
          (push `(apply yas--take-care-of-redo ,snippet)
                buffer-undo-list))
        (yas--snippet-sort-fields snippet)
        (setf (yas--snippet-control-overlay snippet)
              (yas--make-control-overlay snippet (point-min) (point-max)))
        (goto-char (point-max))
        (push snippet yas--active-snippets)
        snippet))))
(provide 'conf-snippet)
